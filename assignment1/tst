#!/bin/bash
# @arg input file
# assumes plpy.pl is in the current directory

suppress=0
arg_flag=0
input_flag=0
extraArg="-c"
argv=""
inputv=""
debug=""
for i in "$@" ; do
  if [ "$arg_flag" -eq "1" ] ; then
    argv="$i"
    arg_flag=2
  elif [ "$input_flag" -eq "1" ] ; then
    inputv="$i"
    input_flag=2
  elif [ $i = "-s" ] ; then
    suppress=1
  elif [ $i = "-a" ] ; then
    arg_flag=1
  elif [ $i = "-i" ] ; then
    input_flag=1
  elif [ $i = "--no-extra-arg" ] ; then
    extraArg=""
  elif [ $i = "-d" ] ; then
    debug="-d"
  else
    file=$i
  fi
done
code=`perl plpy.pl $debug $file`

echo -ne "testing  : $file "
if [ -n "$argv" ] ; then
  echo -ne ", with arg : <$argv> "
fi

if [ -n "$inputv" ] ; then
  echo -n ", with input : \"$inputv\" "
  orig=`echo -e "$inputv" | perl $file $extraArg $argv`
  new=`echo -e "$inputv" | python -c "$code" $argv 2>&1`

else
  orig=`perl $file -c $argv`
  new=`python -c "$code" $argv 2>&1`
fi

dif=`diff <(echo "$orig") <(echo "$new")`

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

if [ -z "$dif" ] ; then
  echo -e "${GREEN}<==============PASSED=============>${NC}"
else
  echo -e "${RED}<==============FAILED=============>${NC}"
fi

if [ "$suppress" -eq "0" ] ; then
  divider="<=================================>"
  echo "$divider"
  echo "Converted Code:"
  echo "$code"
  echo "$divider"
  echo "Original Output: "
  echo "$orig"
  echo "$divider"
  echo "New Output:"
  echo "$new"
  echo "$divider"
  echo "Diff:"
  echo "$dif"
fi
